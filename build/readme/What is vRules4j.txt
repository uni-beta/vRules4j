

vRules4j是一款可应用于java bean对象属性值规则校验的轻量级的校验引擎。它只专注于对象分析校验。引擎运行的高效性，配置规则的可维护性可重用性是它最显著的特点。

vRules4j的愿景是：Java世界内，在javaBean对象分析校验领域vRules4j是最优秀的校验引擎之一。（尤其是运行效率，校验规则的可读性 可维护性 可重用性和可扩展性等特性）

vRules4j具有以下显著特点：
1. 短小精悍，运行高效。vRuels4j的发布包不超过100k，却具有承担任意复杂对象分析校验的能力，以达到“四两拨千斤”目的。运行效率和本地classes的运行效率一致，没有额外性能开销。

2. 校验规则的配置描述定义是基于面向对象的(OO)。面向对象的三要素是：封装，继承和多态。截止v0.9.x为止，vRules4j在最大程度上实现上述三个特性。
封装：规则实体的定义和对应的java bean在结构和继承关系上是严格一致的。
继承：Extension功能实现了子实体父实体继承关系的校验功能。
多态：Includes功能可以基于当前配置文件按照目录级管理结构导入任意配置文件，并支持子类校验实体的规则覆盖父类实体规则的特性。

以上所述的三个特性让校验规则在最大程度上具有可重用性可读性可维护性。

3. 支持xPath错误信息准确定位。vRules4j-0.9.x版本实现了支持采用xPath语法准确定位错误位置的功能，弥补了该引擎一直无法支持准确定位错误信息位置的不足。

4. vRules4j是一款绿色的独立的软件，它不依赖于任何其他规则引擎工具，并且可以作为独立的组件与web 容器灵活的集成，承担企业应用中业务对象的校验功能。

5. 内置vRuels4j-Digester工具帮助自动生成校验规则配置文件。


为什么选择vRules4j?
1.运行高效的.与本地class速度一致.
2.配置规则可读性可维护性可扩展性高.
3.功能完整而且强大.
4.支持任意复杂度的深度递归分析
5.支持面向对象的规则定义
6.支持对象继承关系校验
7.支持多个属性的关联校验
8.可以调用用户自定义的业务校验方法.
9.XPath准确定位错误发生的位置
10.校验条件的谓词支持标准java语言语法.
11.规则文件可以组织重用.(includes功能)
12.内置vRules4j-Digester工具帮助生成相应的对象校验规则文件.
13.应用简单,与本地程序耦合度极低.
14.用户可注册定制自己想要的校验失败后返回的ErrorObject.
15.可以与web容器灵活集成,将vRules4j应用到企业应用中去.
16.支持i18N.